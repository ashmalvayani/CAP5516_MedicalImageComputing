CUDA_VISIBLE_DEVICES=
Thu Apr 24 18:25:28 2025       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 565.57.01              Driver Version: 565.57.01      CUDA Version: 12.7     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA RTX A6000               On  |   00000000:AF:00.0 Off |                  Off |
| 30%   23C    P8             17W /  300W |       2MiB /  49140MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
INFO 04-24 18:25:32 [__init__.py:239] Automatically detected platform cuda.
PyTorch can access 1 GPU(s).
GPU 0: NVIDIA RTX A6000
INFO 04-24 18:25:42 [config.py:585] This model supports multiple tasks: {'reward', 'generate', 'classify', 'embed', 'score'}. Defaulting to 'generate'.
WARNING 04-24 18:25:42 [arg_utils.py:1854] ['MllamaForConditionalGeneration'] is not supported by the V1 Engine. Falling back to V0. 
INFO 04-24 18:25:42 [llm_engine.py:241] Initializing a V0 LLM engine (v0.8.2) with config: model='meta-llama/Llama-3.2-11B-Vision-Instruct', speculative_config=None, tokenizer='meta-llama/Llama-3.2-11B-Vision-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=8192, download_dir=None, load_format=auto, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar', reasoning_backend=None), observability_config=ObservabilityConfig(show_hidden_metrics=False, otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=None, served_model_name=meta-llama/Llama-3.2-11B-Vision-Instruct, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=None, chunked_prefill_enabled=False, use_async_output_proc=True, disable_mm_preprocessor_cache=False, mm_processor_kwargs=None, pooler_config=None, compilation_config={"splitting_ops":[],"compile_sizes":[],"cudagraph_capture_sizes":[2,1],"max_capture_size":2}, use_cached_outputs=False, 
INFO 04-24 18:25:45 [cuda.py:291] Using Flash Attention backend.
INFO 04-24 18:25:45 [parallel_state.py:954] rank 0 in world size 1 is assigned as DP rank 0, PP rank 0, TP rank 0
INFO 04-24 18:25:45 [model_runner.py:1110] Starting to load model meta-llama/Llama-3.2-11B-Vision-Instruct...
INFO 04-24 18:25:46 [weight_utils.py:265] Using model weights format ['*.safetensors']
INFO 04-24 18:26:03 [loader.py:447] Loading weights took 17.02 seconds
INFO 04-24 18:26:03 [model_runner.py:1146] Model loading took 19.9074 GB and 17.675632 seconds
INFO 04-24 18:26:04 [enc_dec_model_runner.py:278] Starting profile run for multi-modal models.
INFO 04-24 18:26:09 [worker.py:267] Memory profiling takes 6.02 seconds
INFO 04-24 18:26:09 [worker.py:267] the current vLLM instance can use total_gpu_memory (47.43GiB) x gpu_memory_utilization (0.98) = 46.48GiB
INFO 04-24 18:26:09 [worker.py:267] model weights take 19.91GiB; non_torch_memory takes 0.06GiB; PyTorch activation peak memory takes 1.10GiB; the rest of the memory reserved for KV Cache is 25.41GiB.
INFO 04-24 18:26:10 [executor_base.py:111] # cuda blocks: 10408, # CPU blocks: 1638
INFO 04-24 18:26:10 [executor_base.py:116] Maximum concurrency for 8192 tokens per request: 20.33x
INFO 04-24 18:26:13 [model_runner.py:1442] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 04-24 18:26:14 [model_runner.py:1570] Graph capturing finished in 1 secs, took 0.06 GiB
INFO 04-24 18:26:14 [llm_engine.py:447] init engine (profile, create kv cache, warmup model) took 10.55 seconds
Running inference on 199 items...
WARNING 04-24 18:26:15 [preprocess.py:88] Falling back on <BOS> for decoder start token id because decoder start token id is not available.
>>> Inference partially done: 199. Saving results to /home/ashmal/Courses/MedImgComputing/NeuroChat/Captions/Qwen2-VL-Finetune/Evaluation/Outputs/MLlama/bbtest
>> Inference done. Results saved to /home/ashmal/Courses/MedImgComputing/NeuroChat/Captions/Qwen2-VL-Finetune/Evaluation/Outputs/MLlama/bbtest
