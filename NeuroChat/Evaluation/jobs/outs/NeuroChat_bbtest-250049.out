CUDA_VISIBLE_DEVICES=
Thu Apr 24 17:28:44 2025       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 565.57.01              Driver Version: 565.57.01      CUDA Version: 12.7     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA RTX A6000               Off |   00000000:3B:00.0 Off |                  Off |
| 30%   50C    P8             21W /  300W |       2MiB /  49140MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
INFO 04-24 17:28:52 [__init__.py:239] Automatically detected platform cuda.
PyTorch can access 1 GPU(s).
GPU 0: NVIDIA RTX A6000
INFO 04-24 17:29:03 [config.py:585] This model supports multiple tasks: {'embed', 'score', 'reward', 'classify', 'generate'}. Defaulting to 'generate'.
INFO 04-24 17:29:03 [config.py:1697] Chunked prefill is enabled with max_num_batched_tokens=8192.
WARNING 04-24 17:29:05 [utils.py:2181] We must use the `spawn` multiprocessing start method. Overriding VLLM_WORKER_MULTIPROC_METHOD to 'spawn'. See https://docs.vllm.ai/en/latest/getting_started/troubleshooting.html#python-multiprocessing for more information. Reason: CUDA is initialized
INFO 04-24 17:29:10 [__init__.py:239] Automatically detected platform cuda.
INFO 04-24 17:29:12 [core.py:54] Initializing a V1 LLM engine (v0.8.2) with config: model='/home/ashmal/Courses/MedImgComputing/NeuroChat/Captions/Qwen2-VL-Finetune/output/merged_models/qwen2_sft_full', speculative_config=None, tokenizer='/home/ashmal/Courses/MedImgComputing/NeuroChat/Captions/Qwen2-VL-Finetune/output/merged_models/qwen2_sft_full', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, tokenizer_revision=None, trust_remote_code=True, dtype=torch.float16, max_seq_len=4096, download_dir=None, load_format=auto, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar', reasoning_backend=None), observability_config=ObservabilityConfig(show_hidden_metrics=False, otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=None, served_model_name=/home/ashmal/Courses/MedImgComputing/NeuroChat/Captions/Qwen2-VL-Finetune/output/merged_models/qwen2_sft_full, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=True, chunked_prefill_enabled=True, use_async_output_proc=True, disable_mm_preprocessor_cache=True, mm_processor_kwargs=None, pooler_config=None, compilation_config={"level":3,"custom_ops":["none"],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":512}
WARNING 04-24 17:29:13 [utils.py:2321] Methods determine_num_available_blocks,device_config,get_cache_block_size_bytes,initialize_cache not implemented in <vllm.v1.worker.gpu_worker.Worker object at 0x14c403e57e80>
INFO 04-24 17:29:13 [parallel_state.py:954] rank 0 in world size 1 is assigned as DP rank 0, PP rank 0, TP rank 0
INFO 04-24 17:29:13 [cuda.py:220] Using Flash Attention backend on V1 engine.
INFO 04-24 17:29:14 [gpu_model_runner.py:1174] Starting to load model /home/ashmal/Courses/MedImgComputing/NeuroChat/Captions/Qwen2-VL-Finetune/output/merged_models/qwen2_sft_full...
WARNING 04-24 17:29:14 [vision.py:97] Current `vllm-flash-attn` has a bug inside vision module, so we use xformers backend instead. You can run `pip install flash-attn` to use flash-attention backend.
INFO 04-24 17:29:14 [config.py:3243] cudagraph sizes specified by model runner [1, 2, 4, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248, 256, 264, 272, 280, 288, 296, 304, 312, 320, 328, 336, 344, 352, 360, 368, 376, 384, 392, 400, 408, 416, 424, 432, 440, 448, 456, 464, 472, 480, 488, 496, 504, 512] is overridden by config [512, 384, 256, 128, 4, 2, 1, 392, 264, 136, 8, 400, 272, 144, 16, 408, 280, 152, 24, 416, 288, 160, 32, 424, 296, 168, 40, 432, 304, 176, 48, 440, 312, 184, 56, 448, 320, 192, 64, 456, 328, 200, 72, 464, 336, 208, 80, 472, 344, 216, 88, 120, 480, 352, 248, 224, 96, 488, 504, 360, 232, 104, 496, 368, 240, 112, 376]
WARNING 04-24 17:29:14 [topk_topp_sampler.py:63] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
INFO 04-24 17:29:19 [loader.py:447] Loading weights took 4.62 seconds
INFO 04-24 17:29:19 [gpu_model_runner.py:1186] Model loading took 15.6271 GB and 5.027143 seconds
INFO 04-24 17:29:19 [gpu_model_runner.py:1456] Encoder cache will be initialized with a budget of 16384 tokens, and profiled with 1 image items of the maximum feature size.
INFO 04-24 17:29:45 [backends.py:415] Using cache directory: /home/ashmal/.cache/vllm/torch_compile_cache/411ce61ba1/rank_0_0 for vLLM's torch.compile
INFO 04-24 17:29:45 [backends.py:425] Dynamo bytecode transform time: 11.09 s
INFO 04-24 17:29:46 [backends.py:115] Directly load the compiled graph for shape None from the cache
INFO 04-24 17:29:54 [monitor.py:33] torch.compile takes 11.09 s in total
INFO 04-24 17:29:55 [kv_cache_utils.py:566] GPU KV cache size: 506,064 tokens
INFO 04-24 17:29:55 [kv_cache_utils.py:569] Maximum concurrency for 4,096 tokens per request: 123.55x
INFO 04-24 17:30:23 [gpu_model_runner.py:1534] Graph capturing finished in 28 secs, took 0.50 GiB
INFO 04-24 17:30:23 [core.py:151] init engine (profile, create kv cache, warmup model) took 63.48 seconds
Running inference on 199 items...
>>> Inference partially done: 199. Saving results to /home/ashmal/Courses/MedImgComputing/NeuroChat/Captions/Qwen2-VL-Finetune/Evaluation/Outputs/NeuroChat/bbtest
>> Inference done. Results saved to /home/ashmal/Courses/MedImgComputing/NeuroChat/Captions/Qwen2-VL-Finetune/Evaluation/Outputs/NeuroChat/bbtest
